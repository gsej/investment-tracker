trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  dotNetFramework: 'net8.0'
  dotNetVersion: '8.0.x'
  targetRuntime: 'linux-x64'

stages:
  - stage: build
    displayName: build api
    jobs:
    - job: build
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET 8'
        inputs:
          version: $(dotNetVersion)
      - task: DotNetCoreCLI@2
        displayName: 'Build Api'
        inputs:
          command: 'build'
          projects: 'code/Api/Api.csproj'
      - task: DotNetCoreCLI@2
        inputs:
          command: publish
          publishWebProjects: True       
          arguments: '--configuration $(BuildConfiguration) --framework $(dotNetFramework) --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: True
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'api'

  - stage: Dev
    dependsOn: build
    jobs:
    - deployment: deployToDev
      environment: dev
      displayName: deploy to app service
      strategy:
        runOnce:
          deploy:
            steps:           
             - task: DownloadBuildArtifacts@1
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'api'
                 itemPattern: '**/Api.zip'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureRmWebAppDeployment@4
               inputs:
                 ConnectionType: 'AzureRM'
                 azureSubscription: 'gsej-service-connection'
                 appType: 'webApp'
                 WebAppName: 'app-investment-tracker'
                 packageForLinux: '$(Pipeline.Workspace)/api/Api.zip'
